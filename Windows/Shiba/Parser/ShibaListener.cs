//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Shiba.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Shiba.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ShibaParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IShibaListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.view"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterView([NotNull] ShibaParser.ViewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.view"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitView([NotNull] ShibaParser.ViewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProperty([NotNull] ShibaParser.PropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.property"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProperty([NotNull] ShibaParser.PropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] ShibaParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] ShibaParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.map"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMap([NotNull] ShibaParser.MapContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.map"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMap([NotNull] ShibaParser.MapContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.basicValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicValue([NotNull] ShibaParser.BasicValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.basicValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicValue([NotNull] ShibaParser.BasicValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] ShibaParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] ShibaParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.shibaExtension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShibaExtension([NotNull] ShibaParser.ShibaExtensionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.shibaExtension"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShibaExtension([NotNull] ShibaParser.ShibaExtensionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArray([NotNull] ShibaParser.ArrayContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.array"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArray([NotNull] ShibaParser.ArrayContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ShibaParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] ShibaParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ShibaParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] ShibaParser.IdentifierContext context);
}
} // namespace Shiba.Parser
