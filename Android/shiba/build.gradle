apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'


android {
    compileSdkVersion 28

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.antlr:antlr4:4.7.1'
    // use ANTLR version 4
    implementation 'com.android.support:appcompat-v7:28.+'
    implementation 'org.mozilla:rhino:1.7.10'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:gridlayout-v7:28.+'
    implementation 'com.android.support:recyclerview-v7:28.+'
    implementation 'com.android.support.constraint:constraint-layout:1.+'
}


tasks.withType(Javadoc).all {
    enabled = false
}


publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/droidils-release.aar")
            groupId 'moe.tlaster'
            artifactId 'shiba'
            version '0.0.1'
            pom.withXml {
                configurations.compile.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') // Get bintray User
    key = System.getenv('BINTRAY_API_KEY') // Get bintray Secret API Key
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'Shiba'
        name = project.name
        userOrg = 'tlaster'
        licenses = ['MIT']
        desc = 'Lightweight Cross-Platform UI framework'
        vcsUrl = 'https://github.com/Tlaster/Shiba.git'

        version {
            name = '0.0.1'
            vcsTag = '0.0.1'
        }
    }
    publications = ['Production']
}